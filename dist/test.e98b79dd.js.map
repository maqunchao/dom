{"version":3,"sources":["test.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendClid","wrap","remove","removeChild","empty","array","a","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"test.e98b79dd.js","sourceRoot":"..","sourcesContent":["window.dom = {\n    //创建一个dom节点\n    create(string){\n        //创建一个template容器标签\n        const container = document.createElement(\"template\");\n        //删除字符串的头尾空格\n        container.innerHTML = string.trim();\n        return container.content.firstChild;\n    },\n\n    //先找到node节点的下一个节点,再将node2的插入到该节点的前面, 等于插入到node节点后面\n    after(node, node2){\n        node.parentNode.insertBefore(node2, node.nextSibling);\n    },\n    \n    //插到该节点的前面 \n    before(node, node2){\n        node.parentNode.insertBefore(node2, node);\n    },\n\n    //添加子节点\n    append(parent, node){\n        parent.appendClid(node);\n    },\n\n    //添加父节点\n    wrap(node, parent){\n        //先把插入该节点的前面\n        dom.before(node, parent)\n        //append会将插入的值,从原来的地方移开\n        dom.append(parent, node)\n    },\n\n    //删除某个节点\n    remove(node){\n        node.parentNode.removeChild(node)\n        return node\n    },\n    //删除子节点\n    empty(node){\n        const array = [];\n        let a = node.firstChild;\n        while(x){\n            array.push(dom.remove(node.firstChild))\n            x = node.firstChild\n        }\n        return array\n    },\n\n    \n    //读写属性\n    attr(node, name, value){\n        //重载\n        if(arguments.length === 3){\n            node.setAttribute(name, value)\n        } else if(arguments.length === 2){\n            return node.getAttribute(name)\n        }\n    },\n\n    //改变文本内容\n    text(node, string){ //适配\n        //获取文本内容\n        if(arguments.length === 2){\n            if('innerText' in node){\n                node.innerText = string  //IE\n            } else {\n                node.textContent = string //chrome firefox\n            }\n            \n        } else if(arguments.length === 1){ //只获取节点\n            if('innerText' in node){\n                return node.innerText\n            } else {\n                return node.textContent\n            }\n        }\n    },\n\n    //更改html\n    html(node, string){\n        if(arguments.length === 2){\n\n            node.innerHTML = string\n        } else if(arguments.length === 1){\n            return node.innerHTML\n        }\n    },\n    //修改style\n    style(node, name, value){\n        if(arguments.length === 3){\n            //dom.style(div, 'color', 'red')\n            node.style[name] = value\n        } else if(arguments.length === 2){\n            if(typeof name === 'string'){\n                //dom.style(div, 'color') 获取div的 style中的颜色\n                return node.style[name]\n            } else if( name instanceof Object){\n                //dom.style(div, {color:'red'})\n                const object = name\n                for(let key in object){\n                    node.style[key] = object[key]\n                }\n            }\n        }\n    },\n    //添加style\n    class:{\n        add(node, className){\n            node.classList.add(className)\n        },\n        remove(node, className){\n            node.classList.remove(className)\n        },\n        has(node, className){\n            return node.classList.contains(className)\n        }\n    },\n\n    //添加事件的监听\n    on(node, eventName, fn){\n        node.addEventListener(eventName, fn)\n    },\n    //删除事件监听\n    off(node, eventName, fn){\n        node.removeEventListener(eventName, fn)\n    },\n\n    //指定某个范围scope, 默认在document中查找\n    find(selector, scope){\n        return (scope || document).querySelectorAll(selector)\n\n    },\n    //获取父元素\n    parent(node){\n        return node.parentNode\n    },\n    //获取子元素\n    children(node){\n        return node.children\n    },\n    //获取兄弟姐妹元素\n    siblings(node){\n        //先将父节点的所有元素转成数组, 然后筛选掉自身元素\n        return Array.from(node.parentNode.children).filter(n=>n!==node)\n    },\n    //获取上一个元素\n    next(node){\n        let x = node.nextSibling\n        while(x && x.nodeType === 3){\n            x = x.nextSibling\n        }\n        return x\n    },\n\n    //获取下一个元素\n    previous(node){\n        let x = node.previousSibling\n        while(x &&  x.nodeType === 3){\n            x = x.previousSibling\n        }\n        return x\n    },\n    //遍历所有节点\n    each(nodeList, fn){\n        for (let i = 0; i < nodeList.length; i++) {\n           fn.call(null, nodeList[i])\n        }\n    },\n    //获取该元素排行\n    index(node){\n        const list = dom.children(node.parentNode)\n        let i;\n        for (i = 0; i < list.length; i++) {\n           if(list[i] === node){\n               break\n           }\n        }\n        return i\n    }\n\n}"]}